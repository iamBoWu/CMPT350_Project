{"ast":null,"code":"/*!\n * storejs v1.0.24\n * Local storage localstorage package provides a simple API\n * \n * Copyright (c) 2018 kenny wang <wowohoo@qq.com>\n * https://github.com/jaywcjlove/store.js\n * \n * Licensed under the MIT license.\n */\nvar storage = window.localStorage;\n\nfunction isJSON(obj) {\n  obj = JSON.stringify(obj);\n\n  if (!/^\\{[\\s\\S]*\\}$/.test(obj)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction stringify(val) {\n  return val === undefined || typeof val === \"function\" ? val + '' : JSON.stringify(val);\n}\n\nfunction deserialize(value) {\n  if (typeof value !== 'string') {\n    return undefined;\n  }\n\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction isFunction(value) {\n  return {}.toString.call(value) === \"[object Function]\";\n}\n\nfunction isArray(value) {\n  return Object.prototype.toString.call(value) === \"[object Array]\";\n} // https://github.com/jaywcjlove/store.js/pull/8\n// Error: QuotaExceededError\n\n\nfunction dealIncognito(storage) {\n  var _KEY = '_Is_Incognit',\n      _VALUE = 'yes';\n\n  try {\n    storage.setItem(_KEY, _VALUE);\n  } catch (e) {\n    if (e.name === 'QuotaExceededError') {\n      var _nothing = function _nothing() {};\n\n      storage.__proto__ = {\n        setItem: _nothing,\n        getItem: _nothing,\n        removeItem: _nothing,\n        clear: _nothing\n      };\n    }\n  } finally {\n    if (storage.getItem(_KEY) === _VALUE) storage.removeItem(_KEY);\n  }\n\n  return storage;\n} // deal QuotaExceededError if user use incognito mode in browser\n\n\nstorage = dealIncognito(storage);\n\nfunction Store() {\n  if (!(this instanceof Store)) {\n    return new Store();\n  }\n}\n\nStore.prototype = {\n  set: function set(key, val) {\n    if (key && !isJSON(key)) {\n      storage.setItem(key, stringify(val));\n    } else if (isJSON(key)) {\n      for (var a in key) {\n        this.set(a, key[a]);\n      }\n    }\n\n    return this;\n  },\n  get: function get(key) {\n    if (!key) {\n      var ret = {};\n      this.forEach(function (key, val) {\n        return ret[key] = val;\n      });\n      return ret;\n    }\n\n    if (key.charAt(0) === '?') {\n      return this.has(key.substr(1));\n    }\n\n    var args = arguments;\n\n    if (args.length > 1) {\n      var dt = {};\n\n      for (var i = 0, len = args.length; i < len; i++) {\n        var value = deserialize(storage.getItem(args[i]));\n\n        if (value) {\n          dt[args[i]] = value;\n        }\n      }\n\n      return dt;\n    }\n\n    return deserialize(storage.getItem(key));\n  },\n  clear: function clear() {\n    storage.clear();\n    return this;\n  },\n  remove: function remove(key) {\n    var val = this.get(key);\n    storage.removeItem(key);\n    return val;\n  },\n  has: function has(key) {\n    return {}.hasOwnProperty.call(this.get(), key);\n  },\n  keys: function keys() {\n    var d = [];\n    this.forEach(function (k) {\n      d.push(k);\n    });\n    return d;\n  },\n  forEach: function forEach(callback) {\n    for (var i = 0, len = storage.length; i < len; i++) {\n      var key = storage.key(i);\n      callback(key, this.get(key));\n    }\n\n    return this;\n  },\n  search: function search(str) {\n    var arr = this.keys(),\n        dt = {};\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      if (arr[i].indexOf(str) > -1) dt[arr[i]] = this.get(arr[i]);\n    }\n\n    return dt;\n  }\n};\nvar _Store = null;\n\nfunction store(key, data) {\n  var argm = arguments;\n  var dt = null;\n  if (!_Store) _Store = Store();\n  if (argm.length === 0) return _Store.get();\n\n  if (argm.length === 1) {\n    if (typeof key === \"string\") return _Store.get(key);\n    if (isJSON(key)) return _Store.set(key);\n  }\n\n  if (argm.length === 2 && typeof key === \"string\") {\n    if (!data) return _Store.remove(key);\n    if (data && typeof data === \"string\") return _Store.set(key, data);\n\n    if (data && isFunction(data)) {\n      dt = null;\n      dt = data(key, _Store.get(key));\n      store.set(key, dt);\n    }\n  }\n\n  if (argm.length === 2 && isArray(key) && isFunction(data)) {\n    for (var i = 0, len = key.length; i < len; i++) {\n      dt = data(key[i], _Store.get(key[i]));\n      store.set(key[i], dt);\n    }\n  }\n\n  return store;\n}\n\nfor (var a in Store.prototype) {\n  store[a] = Store.prototype[a];\n}\n\nexport default store;","map":null,"metadata":{},"sourceType":"module"}